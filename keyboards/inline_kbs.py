from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder
from decouple import config

admins = [admin_id for admin_id in config('ADMINS').split(',')]
get_home = InlineKeyboardButton(text="‚ú® –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_home')


def register_kb():
    inline_kb_list = [
        [InlineKeyboardButton(text="‚úçüèª –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data='reg')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def get_to_main_menu():
    inline_kb_list = [
        [get_home]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def cancel_or_get_to_main_menu():
    inline_kb_list = [
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data='make_order'),
         get_home]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def main_menu_kb(user_telegram_id: str):
    inline_kb_list = [
        [InlineKeyboardButton(text="ü•ó –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", callback_data='make_order')],
        [InlineKeyboardButton(text="üìù –ú–æ–π –∑–∞–∫–∞–∑", callback_data='my_order'),
         InlineKeyboardButton(text="üçΩ –ú–µ–Ω—é", callback_data='current_menu')]
    ]
    if user_telegram_id in admins:
        inline_kb_list.append([InlineKeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data='admin')])
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def order_variants():
    inline_kb_list = [
        [InlineKeyboardButton(text="üç≥ –ó–∞–≤—Ç—Ä–∞–∫", callback_data='ord_1'),
         InlineKeyboardButton(text="üç≤ –û–±–µ–¥", callback_data='ord_2'),
         InlineKeyboardButton(text="üçé –ü–æ–ª–¥–Ω–∏–∫", callback_data='ord_3')],
        [InlineKeyboardButton(text="üç≥üçù –ó–∞–≤—Ç—Ä–∞–∫ + –æ–±–µ–¥", callback_data='ord_4')],
         [InlineKeyboardButton(text="ü•ûüçì –ó–∞–≤—Ç—Ä–∞–∫ + –ø–æ–ª–¥–Ω–∏–∫", callback_data='ord_5')],
         [InlineKeyboardButton(text="üçúüç™ –û–±–µ–¥ + –ø–æ–ª–¥–Ω–∏–∫", callback_data='ord_6')],
        [InlineKeyboardButton(text="üç≥üç≤üç∞ –ó–∞–≤—Ç—Ä–∞–∫ + –æ–±–µ–¥ + –ø–æ–ª–¥–Ω–∏–∫", callback_data='ord_7')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)

# def get_inline_kb():
#     inline_kb_list = [
#         [InlineKeyboardButton(text="–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data='get_person')],
#         [InlineKeyboardButton(text="–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='back_home')]
#     ]
#     return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)
#
# def create_qst_inline_kb(questions: dict) -> InlineKeyboardMarkup:
#     builder = InlineKeyboardBuilder()
#     # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
#     for question_id, question_data in questions.items():
#         builder.row(
#             InlineKeyboardButton(
#                 text=question_data.get('qst'),
#                 callback_data=f'qst_{question_id}'
#             )
#         )
#     # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
#     builder.row(
#         InlineKeyboardButton(
#             text='–ù–∞ –≥–ª–∞–≤–Ω—É—é',
#             callback_data='back_home'
#         )
#     )
#     # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
#     builder.adjust(1)
#     return builder.as_markup()

# def ease_link_kb():
#     inline_kb_list = [
#         [InlineKeyboardButton(text="–ú–æ–π —Ö–∞–±—Ä", url='https://habr.com/ru/users/yakvenalex/')],
#         [InlineKeyboardButton(text="–ú–æ–π Telegram", url='tg://resolve?domain=yakvenalexx')],
#         [InlineKeyboardButton(text="–í–µ–± –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url="https://tg-promo-bot.ru/questions"))]
#     ]
#     return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)
