import logging
import sqlite3
from aiogram import Bot, Dispatcher, types, F

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

bot = Bot(token='7280605209:AAH6JW03UpB9qjUf9FRhwwLxlqVTIY7_uGg')
dp = Dispatcher()

status_buttons = types.InlineKeyboardMarkup()
pupil = types.InlineKeyboardButton(text='–£—á–µ–Ω–∏–∫', callback_data='pupil')
teacher = types.InlineKeyboardButton(text='–£—á–∏—Ç–µ–ª—å', callback_data='teacher')
status_buttons.add(pupil, teacher)


@dp.message(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    conn = sqlite3.connect('list_of_students.sql')
    cur = conn.cursor()
    cur.execute(
        'CREATE TABLE IF NOT EXISTS users(id int auto_increment primary key, username varchar(100), name varchar(100), '
        'class varchar(3))')
    conn.commit()
    await message.answer("üçè–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥!\n"
                         "–¢—ã –ø–æ–ø–∞–ª –≤ *¬´–õ–∞–Ω—á–ë–æ—Çü•û¬ª* ‚Äì —Ç–≤–æ–µ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ —à–∫–æ–ª—å–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏!\n"
                         "üìÖ*–í—ã–±–∏—Ä–∞–π –∑–∞–≤—Ç—Ä–∞–∫, –æ–±–µ–¥ –∏–ª–∏ –ø–æ–ª–¥–Ω–∏–∫* ‚Äì –∏ –≤—Å—ë —Å–∞–º–æ –∑–∞–ø–∏—à–µ—Ç—Å—è.\n"
                         "üìã*–°–º–æ—Ç—Ä–∏ —Å–≤–æ–∏ –∑–∞–∫–∞–∑—ã* –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n"
                         "‚è∞*–£—Å–ø–µ–≤–∞–π –æ—Ç–º–µ–Ω–∏—Ç—å*, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª!\n"
                         "üìù*–î–∞–≤–∞–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è?* –≠—Ç–æ –±—ã—Å—Ç—Ä–æ!\n"
                         "üëâ–ñ–º–∏ *¬´–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è¬ª* –∏ –Ω–∞—á–∏–Ω–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!\n"
                         "‚ùì *–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?* –ù–∞–ø–∏—à–∏ /help, –∏ —è –ø–æ–º–æ–≥—É!\n",
                         reply_markup=types.InlineKeyboardMarkup().add(
                             types.InlineKeyboardButton(text='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='register')
                         ))


@dp.callback_query(F.text.contains('register'))
async def registration(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í—ã —É—á–∏—Ç–µ–ª—å –∏–ª–∏ —É—á–µ–Ω–∏–∫?', reply_markup=status_buttons)


@dp.callback_query(F.text.contains('pupil', 'teacher'))
async def status_giving(callback_query: types.CallbackQuery):
    await callback_query.answer('–ù–∞–∑–æ–≤–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–∏ –§–ò–û. –•–æ—Ç–∏–º –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è üëê')


if __name__ == '__main__':
    dp.start_polling(bot)
